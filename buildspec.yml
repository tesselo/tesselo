version: 0.2

phases:
  install:
    commands:
      - apt-get update
      - curl -sL https://deb.nodesource.com/setup_6.x | sudo -E bash -
      - apt-get install -y nodejs
      - npm install -g casperjs phantomjs@1.9.20
      - echo Installing postgis for local testing...
      - apt-get install -y software-properties-common
      - add-apt-repository -y ppa:ubuntugis
      - apt-get update
      - apt-get -y upgrade
      - apt-get install -y postgresql-9.3-postgis-2.2
      - sed -i s/peer/trust/g /etc/postgresql/9.3/main/pg_hba.conf
      - sed -i s/md5/trust/g /etc/postgresql/9.3/main/pg_hba.conf
      - cat /etc/postgresql/9.3/main/pg_hba.conf
      - service postgresql restart

  build:
    commands:
      - echo Getting the Vue App Index file...
      - aws s3 cp s3://$BUCKET/index.html tesselo/templates/app.html
      - echo Building the Zappa deploy image...
      - docker build -t tesselo-zappa -f DockerfileZappa .
      - echo Building the worker Docker image...
      - docker build -t tesselo-worker -f DockerfileWorker --build-arg AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID --build-arg AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY .
      - echo Building the development Docker image...
      - docker build -t tesselo-develop -f DockerfileDevelop .
      - echo Running unit tests in the development image...
      - docker run --rm --net=host -v $PWD/tests:/code/tests --env DEBUG=True --env ZAPPA=True --env LOCAL=True tesselo-develop python manage.py test
      - echo Running management commands collect and migrate...
      - docker run --rm -v $PWD/frontend:/code/frontend --env ZAPPA=True --env AWS_ACCESS_KEY_ID_ZAP=$AWS_ACCESS_KEY_ID --env AWS_SECRET_ACCESS_KEY_ZAP=$AWS_SECRET_ACCESS_KEY --env DB_USER=$DB_USER --env DB_PASSWORD=$DB_PASSWORD --env DB_HOST=$DB_HOST --env DB_NAME=$DB_NAME --env AWS_STORAGE_BUCKET_NAME_STATIC=$AWS_STORAGE_BUCKET_NAME_STATIC --env AWS_STORAGE_BUCKET_NAME_MEDIA=$AWS_STORAGE_BUCKET_NAME_MEDIA tesselo-zappa /code/collect_migrate.sh
      - echo Deploying App to Lambda Stage $STAGE
      - docker run --rm --env AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID --env AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY --env AWS_STORAGE_BUCKET_NAME_STATIC=$BUCKET tesselo-zappa zappa update $STAGE
      - echo Logging in to Amazon ECR on eu-west-1...
      - $(aws ecr get-login --region eu-west-1 --no-include-email)
      - echo Pushing the Docker image to eu-west-1...
      - docker tag tesselo-worker:latest 595064993071.dkr.ecr.eu-west-1.amazonaws.com/tesselo:$STAGE
      - docker push 595064993071.dkr.ecr.eu-west-1.amazonaws.com/tesselo:$STAGE
      - casperjs test --stage=$STAGE tests/e2e/tests
