version: 0.2

phases:
  install:
    commands:
      - apt-get update
      - echo Installing chromium and python3 pip for selenium e2e testing
      - apt-get install -y python3-pip chromium-browser chromium-chromedriver xvfb
      - echo Installing selenium for e2e testing
      - pip3 install --upgrade --ignore-installed selenium urllib3
      - echo Installing postgis for local testing
      - apt-get install -y software-properties-common wget
      - add-apt-repository "deb http://apt.postgresql.org/pub/repos/apt/ $(lsb_release -sc)-pgdg main"
      - wget -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | sudo apt-key add -
      - apt-get update
      - apt-get install -y postgresql-9.6-postgis-2.4
      - sed -i s/peer/trust/g /etc/postgresql/9.6/main/pg_hba.conf
      - sed -i s/md5/trust/g /etc/postgresql/9.6/main/pg_hba.conf
      - service postgresql restart

  build:
    commands:
      - echo Logging in to Amazon ECR registry 763104351884 on eu-west-1...
      - $(aws ecr get-login --region eu-west-1 --no-include-email --registry-ids 763104351884)
      - echo Pulling aws tensorflow image...
      - docker pull 763104351884.dkr.ecr.eu-west-1.amazonaws.com/tensorflow-training:2.2.0-gpu-py37-cu101-ubuntu18.04
      - echo Building the worker Docker image...
      - docker build -t tesselo-worker -f DockerfileWorker --build-arg AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID --build-arg AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY .
      - echo Building the Zappa deploy image...
      - docker build -t tesselo-zappa -f DockerfileZappa .
      - echo Running unit tests in the worker image...
      - docker run --rm --net=host -v $PWD/tests:/code/tests --env DEBUG=True --env TESSELO_GPU=True --env LOCAL=True tesselo-worker python manage.py test --parallel 2
      - echo Building the SNAP GPT worker Docker image...
      - docker build -t tesselo-worker-snap -f DockerfileSnap .
      - echo Running management commands collect and migrate...
      - docker run --rm -v $PWD/frontend:/code/frontend --env ZAPPA=True --env AWS_ACCESS_KEY_ID_ZAP=$AWS_ACCESS_KEY_ID --env AWS_SECRET_ACCESS_KEY_ZAP=$AWS_SECRET_ACCESS_KEY --env DB_USER=$DB_USER --env DB_PASSWORD=$DB_PASSWORD --env DB_HOST=$DB_HOST --env DB_NAME=$DB_NAME --env AWS_STORAGE_BUCKET_NAME_STATIC=$AWS_STORAGE_BUCKET_NAME_STATIC --env AWS_STORAGE_BUCKET_NAME_MEDIA=$AWS_STORAGE_BUCKET_NAME_MEDIA tesselo-zappa /code/collect_migrate.sh
      - echo Deploying App to Lambda Stage $STAGE
      - docker run --rm --env AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID --env AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY --env AWS_STORAGE_BUCKET_NAME_STATIC=$BUCKET tesselo-zappa zappa update $STAGE
      - echo Logging in to Amazon ECR registry 595064993071 on eu-west-1...
      - $(aws ecr get-login --region eu-west-1 --no-include-email --registry-ids 595064993071)
      - echo Pushing the Docker images to eu-west-1...
      - docker tag tesselo-worker:latest 595064993071.dkr.ecr.eu-west-1.amazonaws.com/tesselo:$STAGE
      - docker push 595064993071.dkr.ecr.eu-west-1.amazonaws.com/tesselo:$STAGE
      - docker tag tesselo-worker-snap:latest 595064993071.dkr.ecr.eu-west-1.amazonaws.com/tesselo:$STAGE-snap
      - docker push 595064993071.dkr.ecr.eu-west-1.amazonaws.com/tesselo:$STAGE-snap
      - echo Running e2e selenium tests...
      - DISPLAY=:99 python3 tests/e2e/selenium_tests.py
