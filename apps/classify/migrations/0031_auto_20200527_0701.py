# Generated by Django 3.0.5 on 2020-05-27 07:01

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('sentinel', '0015_auto_20200525_0822'),
        ('classify', '0030_auto_20200228_1417'),
    ]

    operations = [
        migrations.CreateModel(
            name='TrainingPixels',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('look_back_steps', models.PositiveIntegerField(default=0, help_text='Number of composite steps back from sample date should be included in training and predicting data collection. Ignored if zero.')),
                ('band_names', models.CharField(default='B01,B02,B03,B04,B05,B06,B07,B08,B8A,B09,B11,B12', help_text='Comma-separated list of band names and layer ids. If an integer value is added, it is assumed to be a rasterlayer id that should be included in the export.', max_length=500)),
                ('training_all_touched', models.BooleanField(default=True, help_text='Sets the all_touched flag when rasterizing the training samples.')),
                ('needs_large_instance', models.BooleanField(default=False)),
                ('buffer', models.FloatField(default=0)),
                ('collected_pixels', models.FileField(blank=True, null=True, upload_to='clouds/trainingpixels')),
                ('status', models.CharField(choices=[('Unprocessed', 'Unprocessed'), ('Pending', 'Pending'), ('Processing', 'Processing'), ('Finished', 'Finished'), ('Failed', 'Failed')], default='Unprocessed', max_length=20)),
                ('log', models.TextField(blank=True, default='')),
                ('composites', models.ManyToManyField(blank=True, help_text='Is used as training data source if specified. If left blank, the original traininglayer pixels are used.', to='sentinel.Composite')),
                ('sentineltile', models.ForeignKey(blank=True, help_text='Is used as training data source if specified. If left blank, the original traininglayer pixels are used.', null=True, on_delete=django.db.models.deletion.SET_NULL, to='sentinel.SentinelTile')),
                ('traininglayer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='classify.TrainingLayer')),
            ],
        ),
        migrations.CreateModel(
            name='TrainingPixelsPatch',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('index_from', models.IntegerField()),
                ('index_to', models.IntegerField()),
                ('collected_pixels', models.FileField(blank=True, null=True, upload_to='clouds/trainingpixels')),
                ('status', models.CharField(choices=[('Unprocessed', 'Unprocessed'), ('Pending', 'Pending'), ('Processing', 'Processing'), ('Finished', 'Finished'), ('Failed', 'Failed')], default='Unprocessed', max_length=20)),
                ('log', models.TextField(blank=True, default='')),
                ('trainingpixels', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='classify.TrainingPixels')),
            ],
        ),
        migrations.AddField(
            model_name='classifier',
            name='trainingpixels',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='classify.TrainingPixels'),
        ),
    ]
