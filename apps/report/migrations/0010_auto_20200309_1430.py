# Generated by Django 2.1.7 on 2020-03-09 14:30

from django.db import migrations
from django.db.models import OuterRef, Subquery


def forward(apps, schema_editor):
    ReportAggregation = apps.get_model("report", "ReportAggregation")

    sq = Subquery(ReportAggregation.objects.filter(valuecountresult__stats_min__isnull=False).filter(pk=OuterRef('pk')).values('valuecountresult__stats_min')[:1])
    ReportAggregation.objects.filter(valuecountresult__stats_min__isnull=False).update(stats_min=sq)

    sq = Subquery(ReportAggregation.objects.filter(valuecountresult__stats_max__isnull=False).filter(pk=OuterRef('pk')).values('valuecountresult__stats_max')[:1])
    ReportAggregation.objects.filter(valuecountresult__stats_max__isnull=False).update(stats_max=sq)

    sq = Subquery(ReportAggregation.objects.filter(valuecountresult__stats_avg__isnull=False).filter(pk=OuterRef('pk')).values('valuecountresult__stats_avg')[:1])
    ReportAggregation.objects.filter(valuecountresult__stats_avg__isnull=False).update(stats_avg=sq)

    sq = Subquery(ReportAggregation.objects.filter(valuecountresult__stats_std__isnull=False).filter(pk=OuterRef('pk')).values('valuecountresult__stats_std')[:1])
    ReportAggregation.objects.filter(valuecountresult__stats_std__isnull=False).update(stats_std=sq)

    sq = Subquery(ReportAggregation.objects.filter(valuecountresult__stats_cumsum_t0__isnull=False).filter(pk=OuterRef('pk')).values('valuecountresult__stats_cumsum_t0')[:1])
    ReportAggregation.objects.filter(valuecountresult__stats_cumsum_t0__isnull=False).update(stats_cumsum_t0=sq)

    sq = Subquery(ReportAggregation.objects.filter(valuecountresult__stats_cumsum_t1__isnull=False).filter(pk=OuterRef('pk')).values('valuecountresult__stats_cumsum_t1')[:1])
    ReportAggregation.objects.filter(valuecountresult__stats_cumsum_t1__isnull=False).update(stats_cumsum_t1=sq)

    sq = Subquery(ReportAggregation.objects.filter(valuecountresult__stats_cumsum_t2__isnull=False).filter(pk=OuterRef('pk')).values('valuecountresult__stats_cumsum_t2')[:1])
    ReportAggregation.objects.filter(valuecountresult__stats_cumsum_t2__isnull=False).update(stats_cumsum_t2=sq)

    sq = Subquery(ReportAggregation.objects.filter(valuecountresult__value__isnull=False).filter(pk=OuterRef('pk')).values('valuecountresult__value')[:1])
    ReportAggregation.objects.filter(valuecountresult__value__isnull=False).update(value=sq)


def backward(apps, schema_editor):
    pass


class Migration(migrations.Migration):

    dependencies = [
        ('report', '0009_auto_20200306_1457'),
    ]

    operations = [
        migrations.RunPython(forward, backward)
    ]
